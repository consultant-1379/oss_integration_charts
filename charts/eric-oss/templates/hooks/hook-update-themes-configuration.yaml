#
# COPYRIGHT Ericsson 2020
#
#
#
# The copyright to the computer program(s) herein is the property of
#
# Ericsson Inc. The programs may be used and/or copied only with written
#
# permission from Ericsson Inc. or in accordance with the terms and
#
# conditions stipulated in the agreement/contract under which the
#
# program(s) have been supplied.
#
{{- if .Values.activateTheme.enabled }}
{{ $keycloak := include "eric-oss.keycloak.enabled" . }}
{{ if eq $keycloak "true" -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "eric-oss.name" . }}-update-themes-hook
  labels:
    {{- include "eric-oss.kubernetes-io-info" .| nindent 4 }}
  annotations:
    {{- include "eric-oss.helm-annotations" .| nindent 4 }}
    "helm.sh/hook": post-install, post-upgrade
    "helm.sh/hook-weight": "60"
    "helm.sh/hook-delete-policy": hook-succeeded, before-hook-creation
spec:
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      serviceAccountName: {{ template "eric-oss.name" . }}-sa
      {{- if include "eric-oss.keycloak-config.pullSecrets" . }}
      imagePullSecrets:
        - name: {{ template "eric-oss.keycloak-config.pullSecrets" . }}
      {{- end }}
      restartPolicy: Never
      containers:
        - name: keycloak-client
          image: {{ template "eric-oss.keycloak-client-path" . }}
          imagePullPolicy: {{ index .Values "imageCredentials" "keycloak-client" "registry" "imagePullPolicy" }}
          resources:
            requests:
              memory: {{ index .Values "eric-oss-update-themes-hook" "resources" "requests" "memory" }}
              cpu: {{ index .Values "eric-oss-update-themes-hook" "resources" "requests" "cpu" }}
            limits:
                memory: {{ index .Values "eric-oss-update-themes-hook" "resources" "limits" "memory" }}
                cpu: {{ index .Values "eric-oss-update-themes-hook" "resources" "limits" "cpu" }}
          env:
          - name: IAM_ADMIN_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Values.global.iam.adminSecret | quote }}
                key: {{ .Values.global.iam.userKey | quote }}
          - name: IAM_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.global.iam.adminSecret | quote }}
                key: {{ .Values.global.iam.passwordKey | quote }}
          securityContext:
            allowPrivilegeEscalation: true
            runAsNonRoot: false
            runAsUser: 0
          volumeMounts:
          - name: {{ template "eric-oss.name" . }}-update-themes-volume
            mountPath: /config
          - name: create-cacert-volume
            mountPath: /mnt/certs
          args:
          - "update"
          - "realm"
          - "--keycloak_hostname={{ .Values.global.hosts.iam }}"
          - "--keycloak_user=$(IAM_ADMIN_USER)"
          - "--keycloak_password=$(IAM_ADMIN_PASSWORD)"
          - "--config=/config/realm-configuration-theme.json"
      {{- include "eric-oss.nodeSelector" .| indent 6 }}
      volumes:
      - name: {{ template "eric-oss.name" . }}-update-themes-volume
        configMap:
          name: {{ template "eric-oss.name" . }}-update-themes-configmap
          defaultMode: 0777
      - name: create-cacert-volume
        secret:
          secretName: {{ .Values.global.iam.cacert.secretName }}
          items:
            - key: {{ .Values.global.iam.cacert.key }}
              path: {{ .Values.global.iam.cacert.filePath }}
{{- end -}}
{{- end -}}
